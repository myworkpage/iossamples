trigger:
  branches:
    include:
      - master
      - feat/*
  paths:
    include:
      - src/app/*
    exclude:
      - src/api/*

jobs:
  - job: Android_Uat
    displayName: 'Build and Distribute Android UAT'
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: UseDotNet@2
      inputs:
        displayName: 'Use .NET from global.json'
        useGlobalJson: true

    - task: CmdLine@2
      displayName: 'Install MAUI Workload'
      inputs:
        script: 'dotnet workload install maui'

    - task: DeleteFiles@1
      inputs:
        SourceFolder: '$(agent.builddirectory)'
        Contents: '/src/api/*'
        RemoveSourceFolder: true

    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '11'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - task: DotNetCoreCLI@2
      displayName: 'Build Android UAT Project'
      inputs:
        command: 'build'
        projects: 'src/app/Bcbsla.Mobile.App.Droid/Bcbsla.Mobile.App.Droid.csproj'
        arguments: '-c Release_Test -f:net9.0-android35.0'

    - task: CopyFiles@2
      displayName: 'Copy AAB to Staging'
      inputs:
        SourceFolder: '$(agent.builddirectory)'
        Contents: '**/*-Signed.aab'
        TargetFolder: '$(build.artifactstagingdirectory)/UAT'
        flattenFolders: true

    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '20.x'

    - task: DownloadSecureFile@1
      name: downloadFirebaseJson
      displayName: 'Download Firebase Service Account JSON'
      inputs:
        secureFile: 'android-firebase-uat.json'

    - task: PowerShell@2
      displayName: 'Distribute AAB via Firebase App Distribution'
      inputs:
        targetType: inline
        script: |
          # Load service account JSON path
          $serviceAccountJsonPath = "$(downloadFirebaseJson.secureFilePath)"
          $aabFilePath = "$(Build.ArtifactStagingDirectory)/UAT/com.bcbsla.mobile.droid-Signed.aab"
          $appId = "1:1076824969090:android:52c3d66c9ea0e4afc1c99b"  # üîÅ Replace this with your actual Firebase App ID

          if (-Not (Test-Path $aabFilePath)) {
            Write-Error "‚ùå AAB file not found at path: $aabFilePath"
            exit 1
          }

          # Install Google.Apis.Auth (needed to fetch token easily)
          Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
          Install-Module -Name 'Google.Apis.Auth' -Force -Scope CurrentUser

          # Add helper to get access token
          Add-Type -TypeDefinition @"
          using System;
          using System.Threading;
          using System.Threading.Tasks;
          using Google.Apis.Auth.OAuth2;

          public class TokenHelper {
              public static string GetAccessToken(string jsonPath) {
                  GoogleCredential credential = GoogleCredential.FromFile(jsonPath)
                      .CreateScoped("https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/firebase");
                  var tokenTask = credential.UnderlyingCredential.GetAccessTokenForRequestAsync();
                  tokenTask.Wait();
                  return tokenTask.Result;
              }
          }
          "@ -ReferencedAssemblies "Google.Apis.Auth.dll"

          # Get access token
          $accessToken = [TokenHelper]::GetAccessToken($serviceAccountJsonPath)
          Write-Host "‚úÖ Access token acquired."

          # Upload AAB to Firebase App Distribution
          $boundary = [System.Guid]::NewGuid().ToString()
          $headers = @{
            Authorization = "Bearer $accessToken"
            "X-Goog-Upload-Protocol" = "raw"
            "X-Goog-Upload-File-Name" = [System.IO.Path]::GetFileName($aabFilePath)
            "X-Goog-Upload-Command" = "upload, finalize"
            "X-Goog-Upload-Header-Content-Length" = (Get-Item $aabFilePath).Length
          }

          $uploadUrl = "https://firebaseappdistribution.googleapis.com/upload/v1/apps/$appId/releases:upload"
          Write-Host "üì§ Uploading AAB to Firebase..."

          Invoke-RestMethod -Uri $uploadUrl `
            -Method POST `
            -Headers $headers `
            -InFile $aabFilePath `
            -ContentType "application/octet-stream"

          Write-Host "‚úÖ AAB uploaded successfully to Firebase App Distribution."

    - task: PublishBuildArtifacts@1
      displayName: 'Publish UAT Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/UAT'
        ArtifactName: 'drop_uat'
        publishLocation: 'Container'
